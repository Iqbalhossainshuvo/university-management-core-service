// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AcademicSemester {
  id String @id @default(uuid())
  year Int 
  title String
  code String
  startMonth String
  endMonth String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

  student Student[]
  @@map("academic_semesters")
}

model AcademicFaculty{
  id String @id @default(uuid())
  title String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  academicDepartments AcademicDepartment[]
  student Student[]
  faculty Faculty[]
  @@map("academic_faculty")
}

model AcademicDepartment{
  id String @id @default(uuid())
  title String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  academicFaculty AcademicFaculty @relation(fields: [academicFacultyId],references: [id])
  academicFacultyId String 

  student Student[]
  faculty Faculty[]
  @@map("academic_Department")
}

model Student{
  id String @id @default(uuid())
  studentId String
  firstName String
  lastName String
  middlename String
  profileImage String
  email String
  contactNo String
  gender String
  bloodgroup String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  academicSemester AcademicSemester @relation(fields: [academicSemesterId],references: [id])
  academicSemesterId String

  academicDepartment AcademicDepartment @relation(fields: [academicDepartmentId],references: [id])
  academicDepartmentId String

  academicFaculty AcademicFaculty @relation(fields: [academicFacultyId],references: [id])
  academicFacultyId String


  @@map("students")
}

model Faculty{
  id String @id @default(uuid())
  facultyId String
  firstName String
  lastName String
  middlename String
  profileImage String
  email String
  contactNo String
  gender String
  bloodgroup String
  designation String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  academicDepartment AcademicDepartment @relation(fields: [academicDepartmentId],references: [id])
  academicDepartmentId String
  academicFaculty AcademicFaculty @relation(fields: [academicFacultyId],references: [id])
  academicFacultyId String

  @@map("Faculties")
}

model Building {
  id String @id @default(uuid())
  title String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  room Room[]
  @@map("buildings")
}

model Room{
  id String @id @default(uuid())
  roomNumber String
  floor String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  building Building @relation(fields: [buildingId],references: [id])
  buildingId String

  @@map("rooms")
}

